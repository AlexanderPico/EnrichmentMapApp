<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="enrichment_map" default="all">
	
	<!-- DEFINE PATH TO CYTOSCAPE HERE (cytoscape.jar and lib/*jar are needed for compiling the plugin) -->
	<property name="CYTOSCAPE_HOME" value="${module.enrichment_map.basedir}/../../../Program Files/Cytoscape-v2.5.0" />
	<!--
	<property name="CYTOSCAPE_HOME" value="C:/Program Files/Cytoscape-v2.6.2" />
	<property name="CYTOSCAPE_HOME" value="/Applications/Cytoscape_v2.6.2"   />
	-->

	<property file="enrichment_map.properties"/>
	<!-- Uncomment the following property if no tests compilation is needed -->
	<!-- 
	<property name="skip.tests" value="true"/>
	-->
	
	<!-- Compiler options -->
	
	<property name="compiler.debug" value="on"/>
	<property name="compiler.generate.no.warnings" value="off"/>
	<property name="compiler.args" value=""/>
	<property name="compiler.max.memory" value="128m"/>
	<patternset id="ignored.files">
		<exclude name="**/CVS/**"/>
		<exclude name="**/SCCS/**"/>
		<exclude name="**/RCS/**"/>
		<exclude name="**/rcs/**"/>
		<exclude name="**/.DS_Store/**"/>
		<exclude name="**/.svn/**"/>
	</patternset>
	<patternset id="compiler.resources">
		<include name="**/?*.properties"/>
		<include name="**/?*.xml"/>
		<include name="**/?*.gif"/>
		<include name="**/?*.png"/>
		<include name="**/?*.jpeg"/>
		<include name="**/?*.jpg"/>
		<include name="**/?*.html"/>
		<include name="**/?*.dtd"/>
		<include name="**/?*.tld"/>
	</patternset>
	
	
	<!-- Application Server Libraries -->
	
	<!-- Modules -->
	
	
	<!-- Module enrichment_map -->
	
	<dirname property="module.enrichment_map.basedir" file="${ant.file}"/>
	
	
	
	<property name="compiler.args.enrichment_map" value="${compiler.args}"/>
	
	<property name="enrichment_map.output.dir" value="${module.enrichment_map.basedir}/classes"/>
	<property name="enrichment_map.jars.dir" value="${module.enrichment_map.basedir}/jars"/>
	<property name="enrichment_map.testoutput.dir" value="${module.enrichment_map.basedir}/classes"/>
	
	<path id="enrichment_map.module.bootclasspath">
		<!-- Paths to be included in compilation bootclasspath -->
	</path>
	
	<path id="enrichment_map.module.classpath">
		<pathelement location="${CYTOSCAPE_HOME}/cytoscape.jar"/>
		<pathelement location="${CYTOSCAPE_HOME}/lib/cytoscape-task.jar"/>

	</path>
	
	
	<patternset id="excluded.from.module.enrichment_map">
		<patternset refid="ignored.files"/>
	</patternset>
	
	<patternset id="excluded.from.compilation.enrichment_map">
		<patternset refid="excluded.from.module.enrichment_map"/>
	</patternset>
	
	<path id="enrichment_map.module.sourcepath">
		<dirset dir="${module.enrichment_map.basedir}">
			<include name="src"/>
		</dirset>
	</path>
	
	
	<target name="compile.module.enrichment_map" depends="compile.module.enrichment_map.production,compile.module.enrichment_map.tests" description="Compile module enrichment_map"/>
	
	<target name="compile.module.enrichment_map.production" description="Compile module enrichment_map; production classes">
		<mkdir dir="${enrichment_map.output.dir}"/>
		<javac destdir="${enrichment_map.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memoryMaximumSize="${compiler.max.memory}" fork="true">
			<compilerarg line="${compiler.args.enrichment_map}"/>
			<bootclasspath refid="enrichment_map.module.bootclasspath"/>
			<classpath refid="enrichment_map.module.classpath"/>
			<src refid="enrichment_map.module.sourcepath"/>
		</javac>
		
		<copy todir="${enrichment_map.output.dir}/enrichment_map">
			<fileset dir="${module.enrichment_map.basedir}/src">
				<patternset refid="compiler.resources"/>
				<type type="file"/>
			</fileset>
		</copy>
	</target>
	
	<target name="compile.module.enrichment_map.tests" depends="compile.module.enrichment_map.production" description="compile module enrichment_map; test classes" unless="skip.tests"/>
	
	<target name="clean.module.enrichment_map" description="cleanup module">
		<delete dir="${enrichment_map.output.dir}"/>
		<delete dir="${enrichment_map.jars.dir}"/>
		<delete dir="${enrichment_map.testoutput.dir}"/>
	</target>
	
	<target name="init" description="Build initialization">
		<!-- Perform any build initialization in this target -->
	</target>

	<target name="jars" depends="compile.module.enrichment_map.production, buildID" description="Creates jar file for enrichment_map">
		<copy file="${module.enrichment_map.basedir}/plugin.props" todir="${enrichment_map.output.dir}" />
		<property file="${enrichment_map.output.dir}/buildID.props" />
		<echo message="Build: ${build.number} from SVN: ${svn.revision} by: ${build.user}@${build.host} at: ${build.timestamp}" />

		<mkdir dir="${enrichment_map.jars.dir}"/>
		<jar jarfile="${enrichment_map.jars.dir}/EnrichmentMap.jar" basedir="${enrichment_map.output.dir}" />
	</target>

	<target name="buildID" description="write to buildID.props">
		<!-- increment build number -->
		<buildnumber />
		
		<!-- read build number -->
		<property file="build.number" />

		<!-- get svn version -->
		<exec executable="svnversion" outputproperty="svn.revision" failifexecutionfails="false">
			<arg value="${module.enrichment_map.basedir}" />
		</exec>
		
		<!-- get ${USER} and ${HOSTNAME} depending on OS -->
		<property environment="env" />
		<exec executable="whoami"   osfamily="unix" failifexecutionfails="false" outputproperty="env.USERNAME"/>
		<property name="build.user" value="${env.USERNAME}" />
		<exec executable="hostname" osfamily="unix" failifexecutionfails="false" outputproperty="env.COMPUTERNAME"/>
		<property name="build.host" value="${env.COMPUTERNAME}"/>
		
		<!-- write to property file -->
		<propertyfile file="${enrichment_map.output.dir}/buildID.props"  comment="EnrichmentMapPlugin build ID">
			<entry  key="build.number"	value="${build.number}" />
			<entry  key="svn.revision"	value="${svn.revision}"/>
			<entry  key="build.user"  	value="${build.user}"/>
			<entry  key="build.host"  	value="${build.host}"/>
			<entry  key="build.timestamp"	type="date"	value="now"	pattern="yyyy/MM/dd HH:mm:ss Z (z)"/>
		</propertyfile>
	</target>

	<target name="clean" depends="clean.module.enrichment_map" description="cleanup all"/>
	
	<target name="all" depends="init, clean, compile.module.enrichment_map, buildID, jars" description="build all"/>
</project>
